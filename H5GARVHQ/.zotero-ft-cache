Agent-based Architecture for Context-aware and Personalized Event Recommendation
Ana R´egia de M. Nevesa, A´ lvaro Marcos G. Carvalhob, C´elia G. Ralhab
aElectrical Engineering Department – Faculty of Technology – University of Bras´ılia P.O.Box 4386 – Zip Code 70.709-900 – Bras´ılia – Brazil
bComputer Science Department – Institute of Exact Sciences – University of Bras´ılia P.O.Box 4466 – Zip Code 70.904-970 – Bras´ılia – Brazil

Abstract
In order to oﬀer context-aware and personalized information, intelligent processing techniques are necessary. Diﬀerent initiatives considering many contexts have been proposed, but users preferences need to be learned to oﬀer contextualized and personalized services, products or information. Therefore, this paper proposes an agent-based architecture for context-aware and personalized event recommendation based on ontology and the spreading algorithm. The use of ontology allows to deﬁne the domain knowledge model, while the spreading activation algorithm learns user patterns by discovering user interests. The proposed agent-based architecture was validated with the modeling and implementation of eAgora? application, which was illustrated at the Pervasive University context.
Keywords: multiagent system, ontology, personalized information, pervasive university, spreading activation
1. Introduction
The exponential information growth brings many challenges to technology application in diﬀerent scenarios. Particularly, actors in the university scenario ﬁnd hard to deal with multiple sources of data that are constantly produced on a daily basis. As a result, these actors are often missing important academic and social opportunities, such as lectures and concerts. In addition, it is hard to ﬁnd personalized information according to speciﬁc preferences and needs. In this direction, the traditional databases have to be

Preprint submitted to Expert Systems with Applications

July 11, 2013

associated to semantic techniques to deal with contextualized and personalized information.
According to Bettini et al. (2010), context modeling process and reasoning techniques are important to develop context-aware applications. In the semantic domain literature, authors agree that one approach to model semantic contexts is to use ontology (Studer et al., 1998). Also, in the context of knowledge sharing, ontology is a formal description of a domain, including pertaining concepts, entity-relationships, functions, axioms and instances. Thus, ontology is a key component for building adaptive, ﬂexible and intelligent context-aware applications, since agents and devices can share common contextual information.
Nevertheless, pervasive applications need advanced techniques to handle with complexity, ﬂexibility, dynamicity and distribution of real scenarios. An adequate possibility is to use multiagent systems, since agents are able to perceive and act upon the environment providing intelligent integration among devices and services (Wooldridge, 2009). Agents can perform speciﬁc tasks to achieve individual or group objectives using a cooperative or a competitive approach.
In addition, pervasive projects are based on proactiveness and contextualized process where agents are key, since they can characterize each individual in the society to emphasize behaviors and social abilities. Multiagent systems also allow the modularization of the applications in order to abstract their complexity (Nguyen et al., 2011). Considering the university scenario, multiagent systems and other advanced techniques can be used to transform traditional university infrastructure, where mobile devices are active resources in daily life being adequate to a new type of actor behavior. We may cite some attempts to deﬁne the advances of traditional university propelled by technology application (Zender and Tavangarian, 2009; Nelaturu et al., 2010; Mircea and Andreescu, 2012).
In this work, we present an architectural solution that oﬀers personalized and contextualized event recommendation in the pervasive university domain. The motivation for this project stemmed from the problem of information and service abundance available in the university scenario, what can be challenging to meet users appropriate interests. As a social environment to promote the knowledge dissemination, it is adequate to apply the concept of pervasive application in order to improve education. In addition,
2

agreements such as Bologna Process1 encourage to improve the quality of the higher education system, promoting student and staﬀ mobility among European institutions. These facts lead to the need of a better infrastructure in the universities in order to facilitate the education process through the use of information technology.
The proposed architecture is based on multiagent paradigm, where agents use the spread activation approach (Collins and Loftus, 1975) to extract the users behavioral patterns in order to oﬀer contextualized information in the university scenario. Thus, our proposal is based on ﬁve bases: (i) a multiagent model to represent the social interaction of agents in the pervasive university scenario; (ii) the deﬁnition of user context model based on speciﬁc concepts such as user, location, date, time and information; (iii) spread activation algorithm to extract and learn user behavior patterns in a continuous way; (iv) ontology to deﬁne a common vocabulary and to provide a semantic representation of the context aware environment; and (v) wireless network access to locate users inside the university campus.
The rest of the article is organized as follows: in Section 2, we discuss some of the concepts related to this research including pervasive university, context-aware recommender systems and ontology, spreading activation theory and the multiagent paradigm. The agent-based architecture for contextaware and personalized event recommendation is presented in Section 3 and evaluated in Section 4. In Section 5 we discuss related work, while conclusions and future work are presented in Section 6.
2. Conceptual background
In this section we discuss the concepts related to context-aware and personalized recommender systems. Pervasive university is an important context to use semantically connected information, since there is a high volume and dynamism of daily activities that embodies diﬀerent users, environments, devices, services and data to support and facilitate the processes. In the pervasive university environment, context-aware recommender systems are very much in need to accomplish with the diversity of actors and resources involved. The multiagent paradigm seems suitable for building context-aware applications, due to intrinsic agents attributes, e.g., the ability to perceive and act on the environment and important social interaction aspects.
1http://ec.europa.eu/education/higher-education/bologna en.htm
3

2.1. Pervasive University
Pervasive Computing describes computing and communication capability in any object, ideally integrated into our daily lives to oﬀer services, information and entertainment (Satyanarayanan, 2001). The essence of this deﬁnition integrates users, environment, devices, services and data to support and facilitate our daily activities.
A pervasive system must interact naturally with users, be minimally intrusive and react to dynamic changes in the environment. In this way, attributes that deﬁnes the environment and users, such as physical location and behavior patterns, are important to the interaction, besides computing and communication capabilities. Therefore, pervasive system must be context-aware (Baldauf et al., 2007) in order to enhance user-environment interaction. Here, we consider context as any information that can be used to characterize the situation of entities (i.e., whether a person, place or object). Contexts are considered relevant to the interaction between a user and an application, including the user and the application themselves (Abowd et al., 1999). Two representative deﬁnitions include:
A pervasive university is an educational institution that is enriched by mechanisms and artifacts of Pervasive Computing in a targeted manner. From the application point of view, it is a university with seamless Information technology support in all its elds of activity: eLearning/eTeaching, eScience, and eAdministration. From the technical point of view, it is a Pervasive Computing environment where the components and interaction patterns are adapted to the characteristics of a university (Tavangarian et al., 2009);
Intelligent campus (iCampus) it is a paradigm shift from the smart to the intelligent era, e.g., having the faculty of thinking, reasoning and understanding, with the capability of not only making adjustments but also learning and adapting in response to the changing circumstance. The concept is composed of six functional areas of intelligence, namely: (i) iLearning, which is concerned with the “learning aspect of the campus”; (ii) iManagement, which is concerned with the “management” aspect of the campus; (iii) iGovernance, which is concerned with the “governance” aspect of the campus; (iv) iSocial, which is concerned with the “social” aspect of the campus; (v) iHealth, which is con-
4

cerned with the “health” aspect of the campus; and (vi) iGreen, which is concerned with the “green” aspect of the campus (Ng et al., 2010).
Some important features emerge from these deﬁnitions, in particular: (i) university modernization by technological advances, in order to adequate a new context emerging by network communication technological and mobile devices; (ii) promotes an integrated university model to improve communication among students, teachers and staﬀ making the campus inclusive and accessible; (iii) help students in all learning lifecycle in a transparent and personalized way; (iv) personalized recommendation of services and events, which occur in campus anywhere and anytime; (v) value-added features beyond mobile devices and wireless network, included context awareness, transparency and proactiveness in education environment; (vi) extend the reach of the university outside the geographical limitations of the actual physical campus; and (vii) to enrich teaching, learning and research without boundaries.
We observed that the university scenario can be deﬁned by the following characteristics: (i) dynamic – due to mobile users deﬁning diﬀerent contexts; (ii) heterogeneous – considering diverse collection of mobile devices, social interactions and services available; (iii) integrated – where all sections in a university are integrated; (iv) intelligent – where the system is able to perceive and act upon the environment, having the faculty of thinking, reasoning, understanding, learning and adapting in response to changes; and (v) contextualized – where the environment is context aware and deﬁned by contextual information that are related in a domain.
Some pervasive university projects include the Mixed Reality Teaching & Learning Environment – MiRTLE project at Essex University, which is a collaborative research project to create a mixed reality teaching and learning environment taking place on three continents (europe, asia, north america). MiRTLE enables teachers and students participating in real-time mixed and online classes to interact with avatar representations of each other (Callaghan et al., 2008; Dooley et al., 2011). The eCampus project2 at Lancaster University, which aims creating a campus-wide pervasive communication infrastructure (Mitchell and Race, 2006).
2http://ecampus.lancs.ac.uk/
5

2.2. Context-aware recommender systems Considering the university context, where an abundance of information
and services are available such as subscription and scheduling information, can be challenging to the diﬀerent actors to ﬁnd the appropriate services. Moreover, many researchers have focused on the increasing amount of digital information and resources available on the Internet, which can be easily access from mobile devices (Xu et al., 2012; Bouneﬀouf et al., 2012). Hussein and Neuhaus (2010) deﬁne that the problem is not the information overload, but to ﬁnd a way to deliver useful information to end users according to a current situation. One of the possible solutions to information overload problem and ﬁlter useful content is the use of recommender systems (Jannach et al., 2010).
Recommender systems can be deﬁned as any system that provides meaningful recommendations to an user or group of users from a number of possible options that might interest them. Content can be products, information, services and people, e.g., trip planner (Baltrunas, 2011) or e-learning (Sikka et al., 2012). In some cases it is essential that a content must be oﬀered based on the exploitation of knowledge about an individual or group through building and proﬁle analysis. The research area known as personalized recommendation describes the integration of user preferences and interests in the process of delivering a service (Adomavicius and Tuzhilin, 2005; Choi and Han, 2008). For example, in a bookstore the system can store all the books seen or purchased by the user to predict interests.
The traditional methods of recommender systems considers only user preferences and items, not including surrounding environment, e.g., the context, which inﬂuences directly user interests. For instance, an individual may prefer one genre of movie to see alone and another one with their friends. In this case, the preferences are in agreement with the context. Besides, wireless network development and mobile devices have also become an integral part of everyday life, which provide access to information anytime and anywhere (Bouneﬀouf et al., 2012).
As a result, the Context-aware recommender systems – CARS (Adomavicius and Tuzhilin, 2008; Asabere, 2013) emerges as a new paradigm, where contextual information such as features of the mobile device and the environment, people nearby and users activities are incorporated into the recommendation process to improve recommendation results. In this sense, CARS considering dynamic changes triggered by mobile users behavior, where different actions are associated in a context. Another important issue to CARS
6

consists of building dynamically user’s proﬁle, where systems can be learn user’s situations and their corresponding user’s interests. In this sense, Bouneﬀouf et al. (2012) proposed a hybrid- -greedy algorithm which combines the standard -greedy algorithm and both content-based ﬁltering and case-based reasoning techniques to mobile context-aware recommender systems.
There were some previous researches for the personalized services using contextual information such as demonstrated in Hong et al. (2009), where authors proposed an agent-based framework to recommend personalized services based on context history. Context history is used in order to improve the recommendation process by extracting useful information such as: users preferences and patterns behaviors from a collection of the past context and users actions for the past context.
2.3. Spreading activation
The term of spreading activation (SA) originally comes from cognitive psychology and aims to describe the human remembering process (Collins and Loftus, 1975). It includes two major components: the SA network – similar to a semantic network; and the SA algorithm. Our main motivation to use a semantic SA algorithm is to beneﬁt from the relationship between cognitive and semantic processes to improve CARS such as discussed in Hussein et al. (2007) and Alvarez et al. (2011).
The basic concept of SA is that all important information in a speciﬁc domain is mapped on a network with a weight associated, which indicates the interconnection or the level of connection. In the SA network each concept is represented by a node, while the relations between two concepts are represented by a link between the adjacent nodes. When a concept is activated, the respective node is activated too and the activation is spread over adjacent nodes. The ﬂow of activation is attenuated the more it strides away from the initially activated node until the end condition be satisﬁed. At the end of the process, a subgraph is generated which is composed by all the activated nodes that are semantically related to the concepts. Since the SA network or the associative network is a generic network of information items (represented by nodes and links of relations among them), that is often referred as a semantic network (Quillian, 1968), Figure 1 depicts an example of concepts, properties and hierarchical sub-superclass relationship between the animals concepts (e.g., persons and birds) (Crestani, 1997).
Thus, the SA use in CARS present the following characteristics: (i) learns user’s behavior in a transparent way, instead of requesting the users input
7

Figure 1: An example of a semantic network
with their preferences or ratings individual items; (ii) provides facilities to monitor and extract dynamic preferences of individual users in diﬀerent contexts of uses; (iii) oﬀers personalized recommendations for users; (iv) making the user’s interaction with the system more seamless; and (v) enables implicit feedback that are used to adjust the recommendation process.
Several algorithms have been developed to implement the concept of SA in order to automate the recommendation process. Candan and Sapino (2010) discuss three more generic SA techniques: Constrained Leaky Capacitor Model; branch-and-bound; and Hopﬁeld net approach. However, the main idea behind the diﬀerent techniques is the same: node activation; ﬂow propagation through the network; and the stop condition veriﬁcation.
2.4. The multiagent paradigm The multiagent paradigm seems suitable for building context-aware appli-
cations, due to some intrinsic agent attributes, such as the ability to perceive and act on the environment, the possibility of achieving individual goals, the facility to communicate with other agents, the capability to perform actions with some level of autonomy, and the capacity to provide services (Jih et al., 2009).
8

Considering the multiagent design technology, there are important software aspects embodied such as modularity, that allows the natural partitioning of the whole application in a set of basic and independent tasks. This decomposition make possible that each agent uses the most appropriate paradigm for solving its particular problem, providing robustness and eﬃciency to the system, being easily extended with the inclusion of new agents with diﬀerent features to the system (Wooldridge, 2009).
The environment where the agents are located is an essential part of the system. Because of that, to specify the environment properties is a project deﬁnition that is related to the problem domain requirements (Weyns and Holvoet, 2004). The agents situated in a particular environment have to perceive and act upon it. However, this perception may be limited by the agents capacity and by the environment properties. The use of multiagent paradigm is justiﬁed when the nature of the problem is complex and distributed; moreover, it provides robustness and eﬃciency to the system (Jennings, 2001).
There are some researches for providing the personalized services or informations using multiagent approach. Adding characteristics in the process of recommendation in order to improve recommendations quality include: social ability, autonomy, reactiveness and proactiveness. Al Tair et al. (2012) presents an architecture of a context-aware pro-active recommender system in a tourist domain using multiagent paradigm to add proactiveness. Vizca´ıno et al. (2010) presents an agent architecture combined with a trust model to recommend documents in a community. The internal architecture is composed of two levels: reactive and social deliberative. The social level simulate social behavior and emulate human feelings such as trust and intuition, considering opinions and behaviors of each user in the community. Therefore, the process of recommendation is based on social behavior modeling by agents.
3. Architecture overview
In previous work, we developed a prototype for indoor user localization using multiagent approach (Fonseca et al., 2011; de M. Neves et al., 2013). This prototype allowed to deﬁne the necessary characteristics for a more complex architecture in order to provide personalized recommendation, but not only for indoor localization, since the pervasive university domain deals with the university campus as a whole (indoor and outdoor). Therefore, we improved our previous architecture by associating a contextual ontology model to the SA algorithm in order to extract users behavior patterns. This
9

association intends to improve personalized and contextualized information oﬀered on the pervasive university domain.
In this section, we describe how the semantic representation of the personalized application is deﬁned through the use of a common vocabulary of concepts in the ontology. To design an application based on the agent-based architecture we adopted a methodology named Prometheus (Padgham and Winikoﬀ, 2004).
3.1. Context model
In order to deﬁne a common vocabulary to share context information in the pervasive university scenario, an ontology was deﬁned using Web Ontology Language (OWL)3. Since the ontology contains semantic concepts and the relations among them, it can represent the domain knowledge allowing agents to manipulate information in the speciﬁed domain. Normally, the university as an institution can be fully characterized by some related entities. In this work, we have deﬁned ﬁve main entities to represent the university: (i) students (undergraduate and graduated); (ii) university administration and the administrative structure; (iii) the academy and the academic structure; (iv) educational and social activities, focused on academic interactions in the Campus; and (v) the Campus infrastructure (i.e, physical structure). These ﬁve entities were modeled and deﬁned through ontological concepts and their respective relations.
The ontology deﬁnition was based on the 101 Method (Noy and McGuinness, 2001), which is an iterative approach to ontology development. We used Prot´eg´e 4.14, a free and open source ontology tool that provides a ﬂexible base for rapid prototype development. The deﬁned ontology includes the concepts manipulated by the agent-based architecture in the context of pervasive university. To illustrate the deﬁned university domain ontology we used the University of Brasilia (UnB), which is composed by four Campi located in diﬀerent cities in the Federal District of Brazil: the Darcy Ribeiro Campus in the Plano Piloto of Bras´ılia city, the Planaltina Campus, the Gama Campus and the Ceilˆandia Campus. The UnB ontology was named OntoUnB and is composed by more than two hundred related concepts. Figure 2 presents a substract of OntoUnB through the concepts taxonomy:
3http://www.w3.org/TR/owl-features 4http://protege.stanford.edu/
10

• TimeSlot – contains details of the date such as weekday, month day, time related to user and events (TimePerson, TimeEvent);
• Person – deﬁnes user information and includes: (i) Activity, which represents individual users tasks; (ii) Proﬁle, that is composed of the user’s personal data and other dynamic information (e.g. academic and cultural interests); and (iii) Visitor, people from external communities the are visiting UnB;
• Information – the campus events information. Involves directly three classes: ServiceLocation, which locates a user on campus; CulturalEvents, that describes all cultural events on campus; and AcademicEvents, that describes all academic events on campus; and
• Campus – includes information related to user physical location, events and building in the university campi (CampusPlanaltina, CampusGama, DarcyRibeiro and CampusCeilaˆndia).
Figure 2: OntoUnB taxonomy
3.2. System speciﬁcation In the literature, there are many Agent Oriented Software Engineer-
ing (AOSE) methodologies (Iglesias et al., 1999; Dam and Winikoﬀ, 2004; Henderson-Sellers and Giorgini, 2005). We may cite some prominent methodologies such as Gaia (Wooldridge et al., 2000), MaSE (DeLoach et al., 2001), Prometheus (Padgham and Winikoﬀ, 2002) and Tropos (Giorgini et al., 2004).
In this paper the Prometheus methodology is being used. Prometheus was chosen because it oﬀers a set of detailed guidelines which provide a
11

better understanding of what is required in each step of the development. The development process in Prometheus has three phases: (i) the system speciﬁcation, concerning the environment issues, where the system is deﬁned in terms of goals, actions, percepts and scenarios; (ii) the architectural design, refers to agent types and interactions; and (iii) detailed design, relates each agent description in terms of capabilities, data, events and plans. The design process is supported by Prometheus Design Tool (PDT)5. We have used PDT to develop our application prototype which are brieﬂy described through the system speciﬁcation and the architecture design.
To validate the proposed agent-based architecture the eAgora? application prototype was developed (in Portuguese eAgora means “and now”, while “e” represents eletronic). The eAgora? application is described by using the use case scenario, system requirements and entity description of basic actor roles. A use case scenario is a brieﬂy description of on typical scenario (A1) to illustrate the system operation sequence with responding to a particular event:
• the eAgora? application installed at the university and available on mobile devices, aims to help students, professors, staﬀ and visitors to locate themselves in the environment and to oﬀer personalized suggestions of events that occur on campus according to the active context. The application must be able to learn the user’s behavioral patterns through SA algorithm and recording user actions.
We may cite as general functional system requirements (FR) deﬁned for A1 scenario:
• A1-FR1 – user login: login information with username and password;
• A1-FR2 – locate users;
– A1-FR2.1 – locate users in the outdoor environment; and – A1-FR2.2 – locate users in the indoor environment using the ex-
isting wireless network (WiFi, Bluetooth and ZigBee) through artiﬁcial neural network.
5http://www.cs.rmit.edu.au/agents/pdt/
12

• A1-FR3 – tailored suggestions: recommendations of cultural and academics events that occur on campus that are most relevant to user context;
– A1-FR3.1 – event recommendation: it is the part of eAgora? that aims to recommend cultural and academics events which might be of interest to users. The routine takes the aggregation context, including user proﬁle, date, time and location (e.g., user, event), cultural and academic events that occur on campus, as input; then apply the SA algorithm on domain ontology and returns the tailored suggestion to user;
– A1-FR3.2 – implicit feedback making the user’s interaction with the application dynamic and transparent. This process emphasizes the concept of proactiveness and transparency in pervasive environments; and
– A1-FR3.3 – record and store user activity where each accepted suggestion is stored in the e-Agora base to improve the recommendation process.
We may cite for general non-functional requirements (NFR) deﬁned for A1 scenario:
• A1-NFR1 – viewing the distributed knowledge bases as a single database; and
• A1-NFR2 – interactions with users should be presented in real time.
In the step of deﬁned basic roles, actors and their interactions with the system are determined in the form of percepts and actions. According to Padgham and Winikoﬀ (2004), actors can be any person or role which will interact with the system. Figure 3 presents the roles identiﬁed by clustering goals, linking perceptions and actions:
• Authentication – handles users authentication;
• Locate – aims to locate users in indoor or outdoor environment; and
• Delivery Events – responsible for achieving personalized recommendation goal, getting information from authentication and locate roles, and executes the SA algorithm.
13

Figure 3: System roles diagram
3.3. Architectural design This PDT phase uses as input the result produced in the System speci-
ﬁcation phase and specify what agent types will be included in the system, describes all the interactions between these agents and designs overall system structure. Figure 4 presents the proposed architecture with the following components:
• Access control agent – reactive agent responsible for users authentication;
• Recommender agent – objective agent that infers the personalized recommendation from the users context. This agent is composed by two modules: mass, that aggregates information about user (e.g. location and proﬁle); and SA, which implements an inference engine for acquiring the patterns behaviors and discovering their possible interests; and
• Location agent – reactive agent that collects users location on campus and sends it to Recommendation agent. This agent is composed of two modules: indoor and outdoor. These sub-modules are responsible for monitoring and gathering information to indoor and outdoor environment from Map base and GeoMap base using web services (WS).
After the three agent types were deﬁned, we speciﬁed the data coupling diagram which represent the actions of reading and writing data presented
14

Figure 4: Proposed agent-based architecture
in the architecture of Figure 4, including for example e-Agora, Geomap and Map bases.
Note that Figure 5 includes all identiﬁed data in the system: (i) Users Base, that is the University of Bras´ılia community database containing students and employees information; (ii) eAgora? Base, which is an application database that contains the domain ontology and users proﬁles; (iii) Map Base, which contains indoor building maps; and (iv) GeoMap Base, that contains outdoor information including all university Campi. Once the data identiﬁcation process is completed, the agent roles or functions are distributed and grouped to each agent as presented in Figure 6.
3.4. Recommendation using SA algorithm The SA approach is used to learn the patterns of users behavior in order
to discover their possible interests having two diﬀerent parts: the domain
15

Figure 5: Data coupling diagram
Figure 6: Agent-role grouping diagram
model and the algorithm based on SA theory. First, the context model has to be built in order to represent the domain knowledge (see Section 3.1). Then, the algorithm has to extract users behavior patterns and discover users interests. The algorithm works similarly to human semantic processing in order to recommend relevant information to users in a personalized way, based on the domain knowledge model deﬁned. A concept inside the semantic structure is activated every time the user accepts recommended information. The cognitive relationship among this and other related concepts will then be considered, creating a customized, distributed and transparent learning process in the user-environment interaction.
The recommendation process using SA technique has been performed using OntoSpread application programming interface (API)6 (Rodr´ıguez et al., 2013). OntoSpread is written in Java under the terms of the GNU General Public License (GPL). It provides a ﬂexible API that enables development, conﬁguration, customization and execution of SA techniques in the Semantic Web domain. OntoSpread allows the implementation of SA algorithm using
6https://code.google.com/p/ontospread/
16

ontologies according to W3C standard languages: RDF-Schema and OWL. OntoSpread API implements the process of activation and spread of concepts in ontologies applying diﬀerent restrictions, such as weight degradation – according to the distance or converging paths reward. eAgora? agent-based personalized recommendation have been implemented using three components that are illustrated in Figure 7:
• Java Agent DEvelopment Framework (JADE)7 – a free software distributed under LGPL license and implemented in JAVA language (Bellifemine et al., 2007). The use of JADE framework is justiﬁed since it simpliﬁes the multiagent development by providing agents communication language, resources to manage agent life cycles and to monitor agents execution, according to the Foundation of Intelligent Physical Agents (FIPA)8 standard;
• Open Services Gateway Initiative (OSGi)9 – an open speciﬁcations that enable the modular assembly of software built with Java technology. It assures remote management and interoperability of applications and services over a broad variety of devices;
• Jboss10 – an application server that implements the Java Platform Entreprise Edition (Java EE).
3.4.1. Illustration scenarios To illustrate the eAgora? application we used two diﬀerent scenarios in-
volving undergraduate computer science students: the student X, enrolled in the second semester; and the student Y, enrolled in the seventh semester. The system performs their proﬁles analysis in order to ﬁnd possible events of interest. The proﬁles have several data about the students, including the courses in the current semester. As a scenario example, suppose student X proﬁle includes as disciplines Calculus 2 Probability and Statistics Data Structure, Physics 2 and Physics 2 Laboratory; while student Y proﬁle includes Introduction to Graph Theory, Operating Systems and Object-Oriented Modeling.
7http://jade.tilab.com/ 8http://www.ﬁpa.org/ 9http://www.osgi.org/Main/HomePage 10http://www.jboss.org/overview/
17

Figure 7: Component diagram
The system searches for events related to the students contexts in order to send customized recommendations. Considering our examples, if student X is physically located in the Physics Department and student Y is located in the Computer Science Department building, the system can recommend a General Physics lecture for the student X and an Advanced Programming lecture for student Y, since these events are happening in the same location they are.
The design of the experiment was deﬁned based on:
• the ontology – the OntoUnB was used;
• the set of initial concepts – initial default value 1.0;
• the weights of the relations – ﬁxed to a default value 1.0; and
• the output degradation function (Oj) – used to deﬁne a function that penalizes h the output value Oj of a concept cj. We used generic
18

customization where h calculates the output concept cj according to degradation level of Equation 1 deﬁned by Rodr´ıguez et al. (2013),

Oj = h(Ij)

(1)

where:
Ij is the total input of node nj.
The eAgora? application tests were executed using browser Android, Samsung Ace with Android 2.3.6 operating system. Figure 8 presents the login screen of eAgora? application of the student X, registration number 0678325.

Figure 8: Login screen (in Portuguese).
After the student authentication, he is located inside the campus (Figure 9(a)) and interact with the eAgora? application through the menus (Figure 9(b)). Figures 10(a) and 10(b) represent the students proﬁle and suggestion list with the respective event areas, according to the proﬁle and analyzed context of student X and Y, respectively.
19

(a) Main menu

(b) Other menu items

Figure 9: eAgora? homescreens (options written in Portuguese)

4. Results and Discussion
Table 1 presents the conﬁgurations considering the two scenarios (Context I and Context II). Note that the parameters: initial default value 1.0, weights of the relations value 1.0 and degradation level are calculated using Equation 1). Table 2 presents the results of the activation context using SA algorithm corresponding to the recommendations of Figure 10(a) and 10(b).
The propagation process occurs when a concept is activated in accordance with the context and proﬁle inputs. In Context I, for example, student X

Conﬁguration Minimum activation value Maximum number of spread concepts Minimum number of spread concepts Output degradation

Context I 1.0 3 3 h1

Context II 1.0 3 3 h1

Table 1: Conﬁgurations

20

(a) Recommendation for student X – Con- (b) Recommendation for student Y – Con-

text I

text II

Figure 10: eAgora? recommendation screen (in Portuguese)

was located near the Physics Department and thus when the Physics II concept node is activated, the activation potential is propagated to the related concepts as Physics II and Experimental Physics III (Figure 10(a)). The SA algorithm enables the concepts semantically related to each other and then the agents seek events related to the respective activated areas.
The SA algorithm result is a list with the activated concepts due to the semantic relation and their activation values, which enables the application to organize and recommend the areas according to their relevance. According to the SA algorithm results, the application ﬁrst suggest the closest areas to the context and student current proﬁle, as shown in Table 2, where in

21

Context of activation Activated nodes Spread nodes Highest activation value Deepest spread path Concepts (name:value)

Context I 17 3 8 2
#Materias If:8.0
#General Physics:2.0

Context II 38 3 8 2
#Materias Comp:8.0
#Advanced Programming:2.0

Table 2: Activation context results using SA algorithm

Context I, according to the student X location in the Physics Department, 17 concepts were activated (activated nodes).
Note that the main diﬀerence presented in Table 2 refers to the number of activated nodes. This happens because the algorithm activate the concepts related to the user current context and student Y has been attending the course for a longer time, resulting in a bigger semantic network with more related nodes being activated. Furthermore, the weights among the connections are continually changing deﬁning the importance that each concept has to the user according to a speciﬁc context.
Thus, the user preferences are dynamically learned, allowing the application eAgora? to adjust automatically to context changes and proactively recommend diﬀerent events in accordance to what is learned. As presented, user application interaction is transparent since there is no need to explicitly ﬁll questionnaires for diﬀerent contexts (not a quantitative analysis). Thus, the application eAgora? can be considered as a context-aware, personalized, proactive event recommendation application.
5. Related work
In this section, we review some initiatives related to the pervasive university. Campus News11 presents an information system to assist users with diﬀerent services in a personalized way, e.g., their location inside the campus (Furbach et al., 2007). Campus News allows to ﬁnd and access relevant information according to users interest through the user of mobile devices (Bluetooth). Service nodes are spread across the campus to broadcast mes-

11http://www.uni-koblenz.de/campusnews/

22

sages to the nearby mobiles. But, users proﬁle are manually conﬁgured on the university webpage.
In Haron et al. (2010), Radio-Frequency IDentiﬁcation (RFID) is used to notify university students on campus. Thus, the RFID-based Campus Context-Aware Notiﬁcation System (R-CCANS) aims to deliver urgent notiﬁcations to users considering their respective location, displaying personalized informations based on users preferences (which are acquired manually). The system uses three context informations: time, identiﬁcation and location. Moreover, context-triggered actions are pre-speciﬁed using if-then-else rules to select relevant information and specify how the context-aware system should adapt to the context changes.
Qingfeng and Longqing (2011) describes an architecture and design ideas for personalized information into universities based on agent technology. Personalized information is achieved by matching a speciﬁc user in the data base to the real-time resources available. The system collects users feedback in order to perform adjustments according to the relevance between resources and their needs.
Sirisaengtaksin et al. (2012) developed an iPhone application to assist new students to locate a classroom in the university campus. Moreover, it allows dynamically routing of students to and from any room in the campus area, including students notiﬁcation of emergency situations.
Diﬀering from the related work initiatives, the present work focus the social interactions of entities in the pervasive university domain through the use of an agent-based model. The agent model is appropriate to represent complex social interactions among diﬀerent entities, where the domain dynamism can be contextualized and personalized into diﬀerent agent types that can interact with the environment and with each other. In addition, a sensible diﬀerence in our proposal refers to the implicit method of capturing user preferences and needs through the use of the semantic SA approach. The cited characteristics allow the transparency properties with a non-intrusive user interaction approach, which is very important as a pervasive computing issue.
6. Conslusions
In this paper an agent-based architecture for providing context-aware and personalized information in the pervasive university scenario was presented. Diﬀerent from the pervasive university initiatives presented in Section 5,
23

our approach uses ontology to deﬁne the domain knowledge model together with the SA algorithm to learn user patterns and discover user interests dynamically.
To validate the proposed agent-based architecture, using the OntoUnB ontology, an application called eAgora? was modeled using Prometheus methodology and implemented. Two phases of Prometheus were presented to eAgora? application, including the system speciﬁcation and the architectural design. Also, two illustration scenarios with real students (Section 3.4.1) were used to detail the proposed approach considering the UnB case.
As future work, we may cite the validation of the eAgora? application in a real scale basis involving more than 30 thousand users of the UnB Campi. Also the extension of the application to include diﬀerent services, such as wall news, cafeteria daily menus, emergency situation notiﬁcations and many other relevant information speciﬁc to each university campus. We consider that the pervasive university area opens a very wide spectrum of possibilities to use intelligent information technology towards the improving of education.
References
Abowd, G. D., Dey, A. K., Brown, P. J., Davies, N., Smith, M., Steggles, P., 1999. Towards a better understanding of context and context-awareness. In: Proceedings of the 1st international symposium on Handheld and Ubiquitous Computing. HUC ’99. Springer-Verlag, pp. 304–307.
Adomavicius, G., Tuzhilin, A., 2005. Personalization technologies: a processoriented perspective. Commun. ACM 48 (10), 83–90.
Adomavicius, G., Tuzhilin, A., 2008. Context-aware recommender systems. In: Proceedings of the 2008 ACM conference on Recommender systems. RecSys ’08. ACM, New York, USA, pp. 335–336.
Al Tair, H., Zemerly, M. J., Al-Qutayri, M., Leida, M., march/june 2012. Architecture for context-aware pro-active recommender system. International Journal Multimedia and Image Processing (IJMIP) 2 (1/2), 15–133.
Alvarez, J. M., Polo, L., Jimenez, W., Abella, P., Labra, J. E., 2011. Application of the spreading activation technique for recommending concepts of well-known ontologies in medical systems. In: Proceedings of the 2nd ACM Conference on Bioinformatics, Computational Biology and Biomedicine. BCB ’11. ACM, New York, USA, pp. 626–635.
24

Asabere, N. Y., 2013. Towards a viewpoint of context-aware recommender systems (cars) and services. International Journal of Computer Science and Telecommunications 4 (1), 10–29.
Baldauf, M., Dustdar, S., Rosenberg, F., 2007. A survey on context-aware systems. International Journal of Ad Hoc and Ubiquitous Computing 2 (4), 263–277.
Baltrunas, L., april 2011. Context-aware collaborative ﬁltering recommender systems. Ph.D. thesis, Faculty of Computer Science, Free University of Bozen-Bolzano (FUB).
Bellifemine, F. L., Caire, G., Greenwood, D., 2007. Developing Multi-Agent Systems with JADE. Wiley.
Bettini, C., Brdiczka, O., Henricksen, K., Indulska, J., Nicklas, D., Ranganathan, A., Riboni, D., apr 2010. A survey of context modelling and reasoning techniques. Pervasive Mob. Comput. 6 (2), 161–180.
Bouneﬀouf, D., Bouzeghoub, A., Gancarski, A. L., 2012. Following the user’s interests in mobile context-aware recommender systems: The hybrid-egreedy algorithm. In: Proceedings of the 2012 26th International Conference on Advanced Information Networking and Applications Workshops. WAINA ’12. IEEE Computer Society, Washington, DC, USA, pp. 657–662.
Callaghan, V., Gardner, M., Horan, B., Scott, J., Shen, L., Wang, M., 2008. A mixed reality teaching and learning environment. In: Proceedings of the 1st international conference on Hybrid Learning and Education. ICHL ’08. Springer-Verlag, Berlin, Heidelberg, pp. 54–65.
Candan, K. S., Sapino, M. L., 2010. Data Management for multimedia retrieval, 1st Edition. Cambridge University Press.
Choi, O., Han, S. Y., 2008. Personalization of rule-based web services. Sensors 8 (4), 2424–2435.
Collins, A. M., Loftus, E. F., 1975. A spreading-activation theory of semantic processing. Psychological Review 82 (6), 407–428.
Crestani, F., 1997. Application of spreading activation techniques in information retrieval. Artiﬁcial Intelligence Review 11, 453–482.
25

Dam, K., Winikoﬀ, M., 2004. Comparing agent-oriented methodologies. In: Giorgini, P., Henderson-Sellers, B., Winikoﬀ, M. (Eds.), Agent-Oriented Information Systems. Vol. 3030 of Lecture Notes in Computer Science. Springer Berlin Heidelberg, pp. 78–93.
de M. Neves, A. R., Fonseca, H. C., Ralha., C. G., 2013. Location agent: A study using diﬀerent wireless protocols for indoor localization. International Journal of Wireless Comm. and Mobile Computing 1 (1), 1–6.
DeLoach, S. A., Wood, M. F., Sparkman, C. H., 2001. Multiagent systems engineering. International Journal of Software Engineering and Knowledge Engineering 11, 231–258.
Dooley, J., Callaghan, V., Hagras, H., Gardner, M., Ghanbari, M., AlGhazzawi, D., 2011. The intelligent classroom: Beyond four walls. In: Ambient Intelligence and Smart Environments,. Vol. 10. pp. 457–468.
Fonseca, H. C. d., Neves, A. R. M., Ralha, C. G., 2011. A user location case study using diﬀerent wireless protocols. In: Proceedings of the 9th ACM International Symposium on Mobility Management and Wireless Access. MobiWac 2011. ACM, pp. 1–4.
Furbach, U., Maron, M., Read, K., 2007. Campus news – an information network for pervasive universities. In: GI Jahrestagung (1). pp. 508–512.
Giorgini, P., Kolp, M., Mylopoulos, J., Pistore, M., 2004. The tropos methodology. In: Bergenti, F., Gleizes, M.-P., Zambonelli, F. (Eds.), Methodologies and Software Engineering for Agent Systems. Vol. 11 of Multiagent Systems, Artiﬁcial Societies, and Simulated Organizations. Springer US, pp. 89–106.
Haron, N. S., Saleem, N. S., Hasan, M. H., Ariﬃn, M. M., Aziz, I. A., march 2010. A rﬁd-based campus context-aware notiﬁcation system. Journal of Computing 2 (3).
Henderson-Sellers, B., Giorgini, P., 2005. Agent-Oriented Methodologies. Idea Group Inc. (IGI).
Hong, J., Suh, E. H., Kim, J., Kim, S., 2009. Context-aware system for proactive personalized service based on context history. Expert Systems with Applications 36 (4), 7448–7457.
26

Hussein, T., Neuhaus, S., 2010. Explanation of spreading activation based recommendations. In: Proceedings of the 1st international workshop on Semantic models for adaptive interactive systems. SEMAIS ’10. ACM, New York, USA, pp. 24–28.
Hussein, T., Westheide, D., Ziegler, J., 2007. Context-adaptation based on ontologies and spreading activation. In: Hinneburg, A. (Ed.), LWA 2007: Lernen - Wissen - Adaption, Halle, September 2007, Workshop Proceedings. Martin-Luther-University Halle-Wittenberg, pp. 361–366.
Iglesias, C. A., Garijo, M., Centeno-Gonza´lez, J., 1999. A survey of agentoriented methodologies. In: Proceedings of the 5th International Workshop on Intelligent Agents V, Agent Theories, Architectures, and Languages. ATAL’98. Springer-Verlag, London, UK, pp. 317–330.
Jannach, D., Zanker, M., Felfernig, A., Friedrich, G., 2010. Recommender Systems An Introduction. Cambridge University Press.
Jennings, N. R., april 2001. An agent-based approach for building complex software systems. Commun. ACM 44 (4), 35–41.
Jih, W.-R., Huang, C.-C., Hsu, J. Y.-J., 2009. Context life cycle management in smart space environments. In: Proceedings of the 3rd workshop on Agent-oriented software engineering challenges for ubiquitous and pervasive computing. AUPC 09. New York, USA, pp. 9–14.
Mircea, M., Andreescu, A. I., 2012. Service-oriented university: changes and opportunities towards innovation. Procedia - Social and Behavioral Sciences 31, 251–256.
Mitchell, K., Race, N. J. P., may 2006. Oi: capturing user attention within pervasive display environments. In: Proceedings of Workshop on Pervasive Mobile Interaction Devices - Mobile Devices as Pervasive User Interfaces and Interaction Devices. PERMID’06. pp. 1–5.
Nelaturu, S. C. B., Kambham, R., Karna, N. J., Parupalli, R., Mandula, K., july 2010. Building intelligent campus environment utilizing ubiquitous learning. In: Technology for Education (T4E), 2010 International Conference on. pp. 230–231.
27

Ng, J. W. P., Azarmi, N., Leida, M., Saﬀre, F., Afzal, A., Yoo, P. D., 2010. The intelligent campus (icampus): End–to–end learning lifecycle of a knowledge ecosystem. In: Proceedings of the 2010 Sixth International Conference on Intelligent Environments. IE ’10. IEEE Computer Society, pp. 332–337.
Nguyen, T., Loke, S. W., Torabi, T., Lu, H., 2011. Placecomm: A framework for context-aware applications in place-based virtual communities. Journal of Ambient Intelligence and Smart Environments 3 (1), 51–64.
Noy, N. F., McGuinness, D. L., 2001. Ontology development 101: A guide to creating your ﬁrst ontology. Tech. rep., Stanford Knowledge Systems Laboratory – Stanford University.
Padgham, L., Winikoﬀ, M., 2002. Prometheus: a methodology for developing intelligent agents. In: Proceedings of the 1st international joint conference on Autonomous agents and multiagent systems: part 1. AAMAS ’02. ACM, New York, USA, pp. 37–38.
Padgham, L., Winikoﬀ, M., 2004. Developing Intelligent Agent Systems: A Practical Guide, 1st Edition. John Wiley and Sons.
Qingfeng, Z., Longqing, S., 2011. Construction of intelligent agent-based university personalized information service system. In: Information Technology and Artiﬁcial Intelligence Conference (ITAIC), 2011 6th IEEE Joint International. Vol. 1. pp. 190–192.
Quillian, R., 1968. Semantic memory. In: Semantic Information Processing. MIT Press, pp. 216–270.
Rodr´ıguez, J. M. A., Gayo, J. E. L., Pablos, P. O., 2013. Ontospread: A framework for supporting the activation of concepts in graph-based structures through the spreading activation technique. In: Lytras, M. D., Ruan, D., Tennyson, R. D., Ordonez De Pablos, P., Garc´ıa Pen˜alvo, F. J., Rusu, L. (Eds.), Information Systems, E-learning, and Knowledge Management Research. Vol. 278 of Communications in Computer and Information Science. Springer Berlin Heidelberg, pp. 454–459.
Satyanarayanan, M., august 2001. Pervasive computing: vision and challenges. Personal Communications, IEEE 8 (4), 10–17.
28

Sikka, R., Dhankhar, A., Rana, C., june 2012. A survey paper on e-learning recommender system. International Journal of Computer Applications 47 (9), 27–30.
Sirisaengtaksin, O., Goedjen, M., Holtkamp, B., apr 2012. Building a better university iphone application. Journal of Computing Sciences in Colleges 27 (4), 63–68.
Studer, R., Benjamins, V. R., Fensel, D., 1998. Knowledge engineering: Principles and methods. Data and Knowledge Engineering 25 (1–2), 161–197.
Tavangarian, D., Lucke, U., Rostock, U., 2009. Pervasive university – a technical perspective. Information Technology 51 (1), 6–13.
Vizca´ıno, A., Soto, J. P., Portillo-Rodr´ıguez, J., Piattini, M., 2010. A multiagent recommender system to suggest documents in communities of practice. In: Demazeau, Y. (Ed.), Trends in practical applications of agents and multiagent systems. Vol. 71. Springer-Verlag, Ch. 3, pp. 339–346.
Weyns, D., Holvoet, T., may 2004. A formal model for situated multi-agent systems. Fundam. Inf. 63 (2–3), 125–158.
Wooldridge, M., 2009. Introduction to Multi–Agent Systems. John Wiley & Sons, Ltd.
Wooldridge, M., Jennings, N. R., Kinny, D., Sep. 2000. The gaia methodology for agent-oriented analysis and design. Autonomous Agents and MultiAgent Systems 3 (3), 285–312.
Xu, B., Bu, J., Chen, C., Cai, D., 2012. An exploration of improving collaborative recommender systems via user-item subgroups. In: Proceedings of the 21st international conference on World Wide Web. WWW ’12. ACM, New York, USA, pp. 21–30.
Zender, R., Tavangarian, D., 2009. Service-oriented university: Infrastructure for the university of tomorrow. In: Tavangarian, D., Kirste, T., Timmermann, D., Lucke, U., Versick, D. (Eds.), Intelligent Interactive Assistance and Mobile Multimedia Computing. Vol. 53 of Communications in Computer and Information Science. Springer Berlin Heidelberg, pp. 73–84.
29

