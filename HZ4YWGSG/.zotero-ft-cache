Modeling of Brain Computer Interface-aided Training in Rehabilitation

Guanxiong Zeng
Brainnetome Center and National Laboratory of Pattern Recognition (NLPR) Institute of Automation, Chinese Academy of Sciences (CASIA), University of Chinese Academy of Sciences (UCAS)
Beijing, China zengguanxiong2016@ia.ac.cn

Yang Chen
Brainnetome Center and NLPR CASIA
Beijing, China yang.chen@ia.ac.cn
Abstract—Brain-computer interface (BCI) is a new technology aimed at providing efficient means to integrate the human brain and the environment. BCI has been considered as an important approach to help patients with movement difficulties. It has been widely studied for controlling external devices directly by recorded neuronal signals. Here we examine, by neural network simulation, how to apply BCI in order to facilitate trainings during the process of rehabilitation. Specifically, we trained a recurrent neural network to control movement. Then some of the neurons were disabled to mimic the situation of impaired motor cortex. Then two approaches of using BCI to retrain the network for functional recovery were tested. In the first one, BCI was used to interfere with the neurons remained intact in the motor cortex directly. In the second approach, BCI was used to influence the activity of motor cortex through non-invasively manipulating the activities of somatosensory cortex. In both approaches, functional recovery was satisfactory. These results shed new light on the possibility of using BCI to facilitate the rehabilitation of movement control after strokes or other brain injuries.
Keywords—brain-computer interface, movement rehabilitation, movement control, recurrent network.
I. INTRODUCTION
Brain-computer interface has been studied for a long time [1], which is a cross-disciplinary technology involving many fields, such as neuroscience, computational neuroscience, pattern recognition and mathematical modeling, etc. With the developments of neuroscience and computer technology in recent years, BCI has attracted much attention. BCI technology enables the brain to interact with either internal or external devices. For example, BCI system can read information stream from the brain while transforming such information as controlling signals to be used for the internal, e.g., muscles, or external, e.g., extra-skeleton, devices. Recently, researchers have been able to use this technology to help spin-injured monkeys to regain walking ability [2]. Despite exciting

Shan Yu*
Brainnetome Center and NLPR CASIA, UCAS Beijing, China
shan.yu@ia.ac.cn
advances, the use of BCI in such situations are still facing two important limitations. The first is that invasive approaches, e.g., implanting micro-electrode arrays into the brain, are required to obtain high-resolution neuronal signal for controlling. The second one is that if non-invasive approaches such as scalp electroencephalography (EEG) is used to record neuronal activities, the spatial and temporal resolution of such signals would be too low to achieve real-time, precise controlling. To overcome these obstacles, here we examine how to use BCI not to directly control movement, but to facilitate the functional recovery of the injured neural circuits.
The movement is directly controlled by the motor cortex in the brain. Once the system is damaged by e.g. stroke or other brain injuries, the movement control ability will be greatly impaired. These functional deficits usually require long-term excises and trainings to improve. There are two possible ways to recover the function of injured system by injecting controlling signals by BCI: (1) invasive stimulation, by which the controlling signals are fed directly to the remaining healthy neurons in the motor cortex and modulate their output, so that the impaired ability in the movement control due to the damaged neurons can be compensated. (2) non-invasive stimulation, by which the controlling signals to the motor neurons are originated from the sensorimotor cortex. The activities of the somatosensory cortex are in turn manipulated non-invasively by providing specific somatosensory stimulation controlled by BCI. Here we used a reservoir network to simulate the motor cortex, which corrects weights based on feedback from the motion trajectory and eventually can produce normal motion tracks autonomously. Then we disabled some of the neurons in the network to mimic the effect of brain injury. By exploiting the two methods mentioned above, we examined how to use BCI to recover the function of the network. Our model is introduced in section II and detailed analysis of the performance of invasive and noninvasive stimulation are discussed in section III. Section IV provides the conclusion.

Fig. 1. Human walking trajectory generated by a reservoir network. (A) The Basic structure of the reservoir network, which is divided into three layers: the input layer, the reservoir layer and the output layer. (B) The influence of different parameters on the accuracy of trajectory generation. (C) Examples of normal human
walking trajectory generated by the reservoir network. The grey circles represent the 5 joints controled by the network.

II. THE NETWORK MODEL

The network model used in this study is the Echo State

Network (ESN) [3], which has successfully solved many

practical problems in the fields of pattern recognition,

complex systems and the like. The core structure of ESN is a

stable reservoir network with randomly-generated dynamical

structures [4]. Typically, the input signal is fed into the

structure, and then mapped to a higher dimension. An output

module is trained to read the state of the reservoir and to

provide output according to the desired signals, i.e.

supervising signals. The structure of the neural network is

shown in Fig. 1A. The reservoir network is often used to

simulate neural system because of its simple structure and

convenience in training. In this study, the ESN model was

constructed as follows [5]:

dx

dt = −x+Winr+Wf yout

(1)

r = tanh(x), yout = Wout r

where Win and Wf were fixed weights after random initialization, Wout was the weight needed to be trained, r was the output of the reservoir, and yout was the output of the whole network. In the following experiments, we used a new

algorithm named orthogonal weights modification (OWM)

recently introduced for continuously training neural networks

[6] to adjust the weights within the reservoir. For the task of

generating time series examined in the current study, the rules

for updating the operators used in OWM algorithm were as

follows:

P(t +1) = P(t) − kr(t)T P(t)

k = Pr(t) / [ + r(t)T P(t)r(t)]

(2)

P(0) = I

where P was the projection matrix. r(t) was the output of the reservoir at time t, and  was the forgetting coefficient. I

was a unit matrix.

III. EXPERIMENTS

A. Methods
The data used and the general procedure of simulations for generating normal human walk trajectory were the same as in [5]. In brief, the data of joints motion for human were downloaded from the Carnegie Mellon University Motion Capture Library (MOCAP) (http://mocap.cs.cmu.edu/). Data were preprocessed by smooth filtering and interpolation (for details, see [5, 7]). The joint motion trajectories were generated by the reservoir network trained by OWM algorithm.
We firstly explored the effect of different network structures and parameters on the accuracy of motion generation. Specifically, we considered the size of the network, the forgetting coefficient  and the gain factor of the network. The gain factor can be understood as the maximum eigenvalue of the internal connection matrix Win. The influence of these factors is illustrated in Fig. 1B and the appropriate parameters were selected from the regions with small enough errors. The data shown in Fig. 1B were the averaged results over 10 repeating experiments. The examples of normal human walking trajectory generated by the reservoir network with chosen parameters are shown in Fig. 1C. The motion of the leg

Fig. 2. Simulation of using BCI to facilitate fcuntional recovery after motor cortex demage. (A) MSE of the output trajectory after various degrees of damage. (B) The schematic diagram of the system using invasive stimulation approch. (C) The schematic diagram of the system using non-invasive stimulation approch. In B
and C, red arrows represent synapses trained using OWM algorithms, while black neurons represent demaged neurons.

Fig. 3. Exemplar of a desieble motion trajectory of one joint point and the corresponding trajectories generated by the network in various conditions. D represents the desirable trajectory and G represents the generated trajectory. (A) The desirable trajectory (dotted line) and the one generated by the network
(solid line) in a normal situation . (B) The desirable and generated trajectories after the damage. (C) The trajectories after BCI-aided invasive stimulation. (D) The trajectories after BCI-aided non-invasive stimulation.

joints (gray ones) was directly controlled by the reservoir network and the trajectory of normal gesture of a walking person was used to train the network. After the training, the network did show a near-perfect match with the supervising signals. The motion trajectory of one exemplar joint is shown in Fig. 3A. The black dotted line is the desirable motion track while the yellow solid line is the one generated by the network.
Next, we explored the influence of the proportion of damaged neuron on the accuracy of the generated trajectory. It can be seen from Fig. 2A and Fig. 3B that even a small proportion of damaged neurons could lead to severe impairments in movement control, and the error increased rapidly as the damage ratio increased. In the following experiments, we chose the condition in which 2% of neurons

were damaged, corresponding to large errors in generating the disable trajectory (Fig. 3B).
To examine how to use BCI to facilitate the functional recovery after such damage, we proposed two methods. We first tested the method of invasive stimulation (Fig .2B), in which the BCI was used for directly sending controlling signals to manipulate the activities of remaining neurons in the motor cortex. Specifically, the feedback signal used by the BCI consisted of the error stream between the actual output of the reservoir network and the desired trajectory. In other words, the state of the whole system was manipulated by injecting controlling signals calculated by BCI in such a way that the outputs of the remaining neurons compensate the impairments caused by the damage. Our results showed that this approach

achieved satisfactory functional recovery (Fig. 3C), with the mean square error (MSE) between the desirable and generated trajectories reduced by 75.26%. However, such an approach requires direct manipulating of neuronal activities in the motor cortex, which can be only achieved by invasively implanting microelectrodes to deliver currents to the neurons.
Then, we tested the approach of non-invasive stimulation (Fig .2C), in which the errors between the desirable trajectory and the actual one was used as the controlled signals to manipulate an additional network coupled with the damaged one. In this scenario, the additional network mimicked the somatosensory cortex, which has reciprocal connections with the motor cortex. The key idea to recruit the somatosensory cortex is that its activities can be manipulated non-invasively through applying specific somatosensory stimulation, which was modeled in the present study as adjusting the weights that inject error signals to different neurons in the somatosensory cortex. We found that such an approach yielded similar functional recovery compared with the first one, i.e. the invasive approach (Fig. 3D). The MSE was reduced by 69.53%.
B. Network Parameters
The network was trained to control five joints of one leg (the gray leg in Fig. 1C). The simulation time step was 0.1. In the normal situation, after training for 20 epochs (one epoch was the motion trajectory of one cycle processed), the network performance was assessed based on three consecutive epochs autonomously generated. The parameters used for the motor cortex network were the following: network size 500, network connection sparsity 0.3, internal gain factor 1.5, the learning rate  0.3, and  5.0.
For the simulation shown in Fig. 2B and C, the network size of the control unit was 100, the network connection sparsity was 0.3, and the internal gain factor was 1.5. For training the control unit in the invasive stimulation approach, the learning rate  was 0.05 and  was 1.0. For training the control unit in the non-invasive stimulation approach, all the parameters were kept the same as mentioned above, except that  was 6.4. In Fig. 3B-D, the learning rate  in the controlled network after the damage was set to 0.005. For the recovery condition, the network was trained by 10 epochs without damage, followed by the training of 10 epochs after damage. Then the performance was assessed with the same method used for the normal condition, i.e., based on three consecutive epochs autonomously generated.
IV. CONCLUSIONS
In the present work we simulated the functional deficits in motion control mimicking the impairments after brain injuries. Then we explored two approaches of using BCI to facilitate rehabilitation. Both of them exhibited significant effects in improving the ability of motion control. Specifically, one of the approaches demonstrated the potential of using BCI in a non-invasive way for functional recovery. These results, serving as a proof of concept, shed new light on the possibility of using BCI to facilitate the rehabilitation of movement control after strokes or other brain injuries.

ACKNOWLEDGMENT
This work was financially supported by the Strategic Priority Research Program of the Chinese Academy of Sciences (CAS) (XDB32040200) and Hundred-Talent Program of CAS (for S.Y.).
REFERENCES
[1] J. R. Wolpaw, N. Birbaumer, D. J. McFarland, G. Pfurtscheller, and T. M. Vaughan, "Brain–computer interfaces for communication and control," Clinical neurophysiology, vol. 113, no. 6, pp. 767-791, 2002
[2] M. Capogrosso, T. Milekovic, D. Borton, F. Wagner, E. M. Moraud, J.B. Mignardot, N. Buse, J. Gandar, Q. Barraud, D. Xing et al., “A brain– spine interface alleviating gait deficits after spinal cord injury in primates,” Nature, vol. 539, no. 7628, p. 284, 2016.
[3] H. Jaeger, "The echo state approach to analysing and training recurrent neural networks-with an erratum note," Bonn, Germany: German National Research Center for Information Technology GMD Technical Report, vol. 148, no. 34, p. 13, 2001.
[4] H. Jaeger and H. Haas, "Harnessing nonlinearity: Predicting chaotic systems and saving energy in wireless communication," Science, vol. 304, no. 5667, pp. 78-80, 2004.
[5] D. Sussillo and L. F. Abbott, "Generating coherent patterns of activity from chaotic neural networks," Neuron, vol. 63, no. 4, pp. 544-557, 2009.
[6] G. Zeng, Y. Chen, B. Cui, and S. Yu, “Continuous learning of contextdependent processing in neural networks,” arXiv preprint arXiv:1810.01256, 2018.
[7] G. W. Taylor, G. E. Hinton, and S. T. Roweis, "Modeling human motion using binary latent variables," in Advances in neural information processing systems, 2007, pp. 1345-1352.

